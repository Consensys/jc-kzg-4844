plugins {
    id "java-library"
    id "me.qoomon.git-versioning" version "6.4.4"
    id "maven-publish"
    id "org.jreleaser" version "1.17.0"
    id "signing"
}

repositories {
    mavenCentral()
}

group = "io.consensys.protocols"

version = "UNKNOWN"

gitVersioning.apply {
    refs {
        tag(".+") {
            version = "\${ref}"
        }
        branch("master") {
            version = "develop"
        }
        branch(".+") {
            version = "\${ref}"
        }
    }
    rev {
        version = "UNKNOWN"
    }
}

java {
    sourceCompatibility = 17
    targetCompatibility = 17
    withJavadocJar()
    withSourcesJar()
}

signing {
    useGpgCmd()
    sign publishing.publications
}

publishing {
    publications {
        mavenJava(MavenPublication) {

            from components.java

            pom {
                name = "${project.name}"
                url = "http://github.com/Consensys/jc-kzg-4844"
                description = "Java wrapper around C-KZG-4844"
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        id = "consensys"
                        name = "Protocols Team"
                        email = "devops@consensys.net"
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/Consensys/jc-kzg-4844.git"
                    developerConnection = "scm:git:ssh://github.com/Consensys/jc-kzg-4844.git"
                    url = "https://github.com/Consensys/jc-kzg-4844"
                }
            }
        }
    }
    repositories {
        maven {
            url = layout.buildDirectory.dir("staging-deploy")
        }
    }
}

jreleaser {
    signing {
        active = 'ALWAYS'
        armored = true
    }
    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepository('build/staging-deploy')
                }
            }
        }
    }
}

tasks.register("checkJarContents") {
    doLast {
        exec {
            executable project.file("src/test/bash/checkResources.sh")
            args "${project.jar.outputs.files.getFiles()[0]}"
        }
    }
}